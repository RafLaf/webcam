// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="color_convert_color_convert,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.520000,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1664,HLS_SYN_LUT=1815,HLS_VERSION=2020_2}" *)

module color_convert (
        ap_clk,
        ap_rst_n,
        stream_in_24_TDATA,
        stream_in_24_TVALID,
        stream_in_24_TREADY,
        stream_in_24_TKEEP,
        stream_in_24_TSTRB,
        stream_in_24_TUSER,
        stream_in_24_TLAST,
        stream_out_24_TDATA,
        stream_out_24_TVALID,
        stream_out_24_TREADY,
        stream_out_24_TKEEP,
        stream_out_24_TSTRB,
        stream_out_24_TUSER,
        stream_out_24_TLAST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [23:0] stream_in_24_TDATA;
input   stream_in_24_TVALID;
output   stream_in_24_TREADY;
input  [2:0] stream_in_24_TKEEP;
input  [2:0] stream_in_24_TSTRB;
input  [0:0] stream_in_24_TUSER;
input  [0:0] stream_in_24_TLAST;
output  [23:0] stream_out_24_TDATA;
output   stream_out_24_TVALID;
input   stream_out_24_TREADY;
output  [2:0] stream_out_24_TKEEP;
output  [2:0] stream_out_24_TSTRB;
output  [0:0] stream_out_24_TUSER;
output  [0:0] stream_out_24_TLAST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

 reg    ap_rst_n_inv;
wire   [9:0] c1_0;
wire   [9:0] c1_1;
wire   [9:0] c1_2;
wire   [9:0] c2_0;
wire   [9:0] c2_1;
wire   [9:0] c2_2;
wire   [9:0] c3_0;
wire   [9:0] c3_1;
wire   [9:0] c3_2;
wire   [9:0] bias_0;
wire   [9:0] bias_1;
wire   [9:0] bias_2;
reg    stream_in_24_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    stream_out_24_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg   [9:0] bias_2_read_reg_1109;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state5_pp0_stage0_iter4;
wire    regslice_both_stream_out_24_V_data_V_U_apdone_blk;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] bias_2_read_reg_1109_pp0_iter1_reg;
reg   [9:0] bias_2_read_reg_1109_pp0_iter2_reg;
reg   [9:0] bias_1_read_reg_1114;
reg   [9:0] bias_1_read_reg_1114_pp0_iter1_reg;
reg   [9:0] bias_1_read_reg_1114_pp0_iter2_reg;
reg   [9:0] bias_0_read_reg_1119;
reg   [9:0] bias_0_read_reg_1119_pp0_iter1_reg;
reg   [9:0] bias_0_read_reg_1119_pp0_iter2_reg;
reg   [9:0] c3_2_read_reg_1124;
reg  signed [9:0] c3_2_read_reg_1124_pp0_iter1_reg;
reg  signed [9:0] c3_1_read_reg_1129;
reg  signed [9:0] c3_0_read_reg_1134;
reg   [9:0] c2_2_read_reg_1139;
reg  signed [9:0] c2_2_read_reg_1139_pp0_iter1_reg;
reg  signed [9:0] c2_1_read_reg_1144;
reg  signed [9:0] c2_0_read_reg_1149;
reg   [9:0] c1_2_read_reg_1154;
reg  signed [9:0] c1_2_read_reg_1154_pp0_iter1_reg;
reg  signed [9:0] c1_1_read_reg_1159;
reg  signed [9:0] c1_0_read_reg_1164;
reg   [2:0] tmp_i1_keep_reg_1169;
reg   [2:0] tmp_i1_keep_reg_1169_pp0_iter1_reg;
reg   [2:0] tmp_i1_keep_reg_1169_pp0_iter2_reg;
reg   [2:0] tmp_i1_keep_reg_1169_pp0_iter3_reg;
reg   [2:0] tmp_i1_strb_reg_1174;
reg   [2:0] tmp_i1_strb_reg_1174_pp0_iter1_reg;
reg   [2:0] tmp_i1_strb_reg_1174_pp0_iter2_reg;
reg   [2:0] tmp_i1_strb_reg_1174_pp0_iter3_reg;
reg   [0:0] tmp_i1_user_reg_1179;
reg   [0:0] tmp_i1_user_reg_1179_pp0_iter1_reg;
reg   [0:0] tmp_i1_user_reg_1179_pp0_iter2_reg;
reg   [0:0] tmp_i1_user_reg_1179_pp0_iter3_reg;
reg   [0:0] tmp_i1_last_reg_1184;
reg   [0:0] tmp_i1_last_reg_1184_pp0_iter1_reg;
reg   [0:0] tmp_i1_last_reg_1184_pp0_iter2_reg;
reg   [0:0] tmp_i1_last_reg_1184_pp0_iter3_reg;
wire   [7:0] v_p1_V_fu_273_p1;
reg   [7:0] v_p1_V_reg_1189;
reg   [7:0] v_p2_V_reg_1194;
reg   [7:0] v_p3_V_reg_1199;
reg   [7:0] v_p3_V_reg_1199_pp0_iter1_reg;
wire   [7:0] trunc_ln1192_3_fu_297_p1;
reg   [7:0] trunc_ln1192_3_reg_1204;
reg   [7:0] trunc_ln1192_3_reg_1204_pp0_iter1_reg;
reg   [7:0] trunc_ln1192_3_reg_1204_pp0_iter2_reg;
wire   [7:0] trunc_ln1192_8_fu_301_p1;
reg   [7:0] trunc_ln1192_8_reg_1209;
reg   [7:0] trunc_ln1192_8_reg_1209_pp0_iter1_reg;
reg   [7:0] trunc_ln1192_8_reg_1209_pp0_iter2_reg;
wire   [7:0] trunc_ln1192_14_fu_305_p1;
reg   [7:0] trunc_ln1192_14_reg_1214;
reg   [7:0] trunc_ln1192_14_reg_1214_pp0_iter1_reg;
reg   [7:0] trunc_ln1192_14_reg_1214_pp0_iter2_reg;
wire  signed [17:0] r_V_fu_315_p2;
reg  signed [17:0] r_V_reg_1219;
wire   [15:0] trunc_ln1115_fu_321_p1;
reg   [15:0] trunc_ln1115_reg_1224;
wire  signed [17:0] r_V_4_fu_331_p2;
reg  signed [17:0] r_V_4_reg_1229;
wire   [15:0] trunc_ln1115_1_fu_337_p1;
reg   [15:0] trunc_ln1115_1_reg_1234;
wire  signed [17:0] r_V_6_fu_344_p2;
reg  signed [17:0] r_V_6_reg_1239;
wire   [15:0] trunc_ln1115_2_fu_350_p1;
reg   [15:0] trunc_ln1115_2_reg_1244;
wire  signed [17:0] r_V_7_fu_357_p2;
reg  signed [17:0] r_V_7_reg_1249;
wire   [15:0] trunc_ln1115_3_fu_363_p1;
reg   [15:0] trunc_ln1115_3_reg_1254;
wire  signed [17:0] r_V_9_fu_370_p2;
reg  signed [17:0] r_V_9_reg_1259;
wire   [15:0] trunc_ln1115_4_fu_376_p1;
reg   [15:0] trunc_ln1115_4_reg_1264;
wire  signed [17:0] r_V_10_fu_383_p2;
reg  signed [17:0] r_V_10_reg_1269;
wire   [15:0] trunc_ln1115_5_fu_389_p1;
reg   [15:0] trunc_ln1115_5_reg_1274;
wire   [15:0] add_ln1192_1_fu_399_p2;
reg   [15:0] add_ln1192_1_reg_1279;
wire   [18:0] ret_V_fu_403_p2;
reg   [18:0] ret_V_reg_1284;
wire  signed [17:0] r_V_5_fu_415_p2;
reg  signed [17:0] r_V_5_reg_1289;
wire   [7:0] trunc_ln1192_fu_421_p1;
reg   [7:0] trunc_ln1192_reg_1294;
wire   [7:0] trunc_ln1192_1_fu_425_p1;
reg   [7:0] trunc_ln1192_1_reg_1299;
wire   [15:0] trunc_ln1192_2_fu_429_p1;
reg   [15:0] trunc_ln1192_2_reg_1304;
wire   [15:0] add_ln1192_10_fu_439_p2;
reg   [15:0] add_ln1192_10_reg_1309;
wire   [18:0] ret_V_3_fu_443_p2;
reg   [18:0] ret_V_3_reg_1314;
wire  signed [17:0] r_V_8_fu_452_p2;
reg  signed [17:0] r_V_8_reg_1319;
wire   [7:0] trunc_ln1192_5_fu_458_p1;
reg   [7:0] trunc_ln1192_5_reg_1324;
wire   [7:0] trunc_ln1192_6_fu_462_p1;
reg   [7:0] trunc_ln1192_6_reg_1329;
wire   [15:0] trunc_ln1192_7_fu_466_p1;
reg   [15:0] trunc_ln1192_7_reg_1334;
wire   [15:0] add_ln1192_17_fu_476_p2;
reg   [15:0] add_ln1192_17_reg_1339;
wire   [18:0] ret_V_6_fu_480_p2;
reg   [18:0] ret_V_6_reg_1344;
wire  signed [17:0] r_V_11_fu_489_p2;
reg  signed [17:0] r_V_11_reg_1349;
wire   [7:0] trunc_ln1192_10_fu_495_p1;
reg   [7:0] trunc_ln1192_10_reg_1354;
wire   [7:0] trunc_ln1192_11_fu_499_p1;
reg   [7:0] trunc_ln1192_11_reg_1359;
wire   [15:0] trunc_ln1192_12_fu_503_p1;
reg   [15:0] trunc_ln1192_12_reg_1364;
wire   [19:0] ret_V_2_fu_541_p2;
reg   [19:0] ret_V_2_reg_1369;
reg   [7:0] p_Val2_2_reg_1374;
reg   [0:0] p_Result_1_reg_1379;
reg   [0:0] tmp_5_reg_1385;
reg   [6:0] trunc_ln415_3_reg_1391;
reg   [3:0] tmp_1_reg_1396;
wire   [19:0] ret_V_5_fu_637_p2;
reg   [19:0] ret_V_5_reg_1402;
reg   [7:0] p_Val2_5_reg_1407;
reg   [0:0] p_Result_3_reg_1412;
reg   [0:0] tmp_9_reg_1418;
reg   [6:0] trunc_ln415_4_reg_1424;
reg   [3:0] tmp_reg_1429;
wire   [19:0] ret_V_8_fu_733_p2;
reg   [19:0] ret_V_8_reg_1435;
reg   [7:0] p_Val2_8_reg_1440;
reg   [0:0] p_Result_5_reg_1445;
reg   [0:0] tmp_13_reg_1451;
reg   [6:0] trunc_ln415_5_reg_1457;
reg   [3:0] tmp_2_reg_1462;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] r_V_fu_315_p1;
wire   [17:0] zext_ln1118_fu_309_p1;
wire   [7:0] r_V_4_fu_331_p1;
wire   [17:0] zext_ln1118_1_fu_325_p1;
wire   [7:0] r_V_6_fu_344_p1;
wire   [7:0] r_V_7_fu_357_p1;
wire   [7:0] r_V_9_fu_370_p1;
wire   [7:0] r_V_10_fu_383_p1;
wire  signed [18:0] sext_ln703_1_fu_396_p1;
wire  signed [18:0] sext_ln703_fu_393_p1;
wire   [7:0] r_V_5_fu_415_p1;
wire   [17:0] zext_ln1118_2_fu_409_p1;
wire  signed [18:0] sext_ln703_5_fu_436_p1;
wire  signed [18:0] sext_ln703_4_fu_433_p1;
wire   [7:0] r_V_8_fu_452_p1;
wire  signed [18:0] sext_ln703_9_fu_473_p1;
wire  signed [18:0] sext_ln703_8_fu_470_p1;
wire   [7:0] r_V_11_fu_489_p1;
wire  signed [19:0] sext_ln703_2_fu_507_p1;
wire  signed [19:0] sext_ln703_3_fu_510_p1;
wire   [17:0] rhs_2_fu_519_p3;
wire  signed [19:0] sext_ln1192_fu_526_p1;
wire   [19:0] ret_V_1_fu_513_p2;
wire   [15:0] trunc_ln1192_4_fu_534_p3;
wire   [15:0] add_ln1192_fu_530_p2;
wire   [15:0] add_ln1192_3_fu_551_p2;
wire   [7:0] add_ln1192_2_fu_547_p2;
wire  signed [19:0] sext_ln703_6_fu_603_p1;
wire  signed [19:0] sext_ln703_7_fu_606_p1;
wire   [17:0] rhs_5_fu_615_p3;
wire  signed [19:0] sext_ln1192_1_fu_622_p1;
wire   [19:0] ret_V_4_fu_609_p2;
wire   [15:0] trunc_ln1192_9_fu_630_p3;
wire   [15:0] add_ln1192_6_fu_626_p2;
wire   [15:0] add_ln1192_9_fu_647_p2;
wire   [7:0] add_ln1192_8_fu_643_p2;
wire  signed [19:0] sext_ln703_10_fu_699_p1;
wire  signed [19:0] sext_ln703_11_fu_702_p1;
wire   [17:0] rhs_8_fu_711_p3;
wire  signed [19:0] sext_ln1192_2_fu_718_p1;
wire   [19:0] ret_V_7_fu_705_p2;
wire   [15:0] trunc_ln1192_s_fu_726_p3;
wire   [15:0] add_ln1192_12_fu_722_p2;
wire   [15:0] add_ln1192_15_fu_743_p2;
wire   [7:0] add_ln1192_14_fu_739_p2;
wire   [7:0] zext_ln415_fu_802_p1;
wire   [6:0] zext_ln415_1_fu_805_p1;
wire   [7:0] p_Val2_3_fu_808_p2;
wire   [0:0] tmp_6_fu_818_p3;
wire   [0:0] Range1_all_zeros_fu_837_p2;
wire   [0:0] Range1_all_ones_fu_832_p2;
wire   [0:0] select_ln778_fu_842_p3;
wire   [0:0] carry_1_fu_826_p2;
wire   [0:0] and_ln781_3_fu_857_p2;
wire   [0:0] and_ln781_fu_863_p2;
wire   [6:0] add_ln416_fu_813_p2;
wire   [6:0] select_ln396_fu_868_p3;
wire   [0:0] deleted_zeros_fu_850_p3;
wire   [0:0] p_Result_s_fu_795_p3;
wire   [7:0] zext_ln394_fu_876_p1;
wire   [7:0] select_ln394_fu_880_p3;
wire   [7:0] zext_ln415_2_fu_903_p1;
wire   [6:0] zext_ln415_3_fu_906_p1;
wire   [7:0] p_Val2_6_fu_909_p2;
wire   [0:0] tmp_10_fu_919_p3;
wire   [0:0] Range1_all_zeros_1_fu_938_p2;
wire   [0:0] Range1_all_ones_1_fu_933_p2;
wire   [0:0] select_ln778_1_fu_943_p3;
wire   [0:0] carry_3_fu_927_p2;
wire   [0:0] and_ln781_4_fu_958_p2;
wire   [0:0] and_ln781_1_fu_964_p2;
wire   [6:0] add_ln416_1_fu_914_p2;
wire   [6:0] select_ln396_1_fu_969_p3;
wire   [0:0] deleted_zeros_1_fu_951_p3;
wire   [0:0] p_Result_2_fu_896_p3;
wire   [7:0] zext_ln394_1_fu_977_p1;
wire   [7:0] select_ln394_1_fu_981_p3;
wire   [7:0] zext_ln415_4_fu_1004_p1;
wire   [6:0] zext_ln415_5_fu_1007_p1;
wire   [7:0] p_Val2_9_fu_1010_p2;
wire   [0:0] tmp_14_fu_1020_p3;
wire   [0:0] Range1_all_zeros_2_fu_1039_p2;
wire   [0:0] Range1_all_ones_2_fu_1034_p2;
wire   [0:0] select_ln778_2_fu_1044_p3;
wire   [0:0] carry_5_fu_1028_p2;
wire   [0:0] and_ln781_5_fu_1059_p2;
wire   [0:0] and_ln781_2_fu_1065_p2;
wire   [6:0] add_ln416_2_fu_1015_p2;
wire   [6:0] select_ln396_2_fu_1070_p3;
wire   [0:0] deleted_zeros_2_fu_1052_p3;
wire   [0:0] p_Result_4_fu_997_p3;
wire   [7:0] zext_ln394_2_fu_1078_p1;
wire   [7:0] select_ln394_2_fu_1082_p3;
wire   [7:0] out3_V_fu_1090_p3;
wire   [7:0] out2_V_fu_989_p3;
wire   [7:0] out1_V_fu_888_p3;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_stream_in_24_V_data_V_U_apdone_blk;
wire   [23:0] stream_in_24_TDATA_int_regslice;
wire    stream_in_24_TVALID_int_regslice;
reg    stream_in_24_TREADY_int_regslice;
wire    regslice_both_stream_in_24_V_data_V_U_ack_in;
wire    regslice_both_stream_in_24_V_keep_V_U_apdone_blk;
wire   [2:0] stream_in_24_TKEEP_int_regslice;
wire    regslice_both_stream_in_24_V_keep_V_U_vld_out;
wire    regslice_both_stream_in_24_V_keep_V_U_ack_in;
wire    regslice_both_stream_in_24_V_strb_V_U_apdone_blk;
wire   [2:0] stream_in_24_TSTRB_int_regslice;
wire    regslice_both_stream_in_24_V_strb_V_U_vld_out;
wire    regslice_both_stream_in_24_V_strb_V_U_ack_in;
wire    regslice_both_stream_in_24_V_user_V_U_apdone_blk;
wire   [0:0] stream_in_24_TUSER_int_regslice;
wire    regslice_both_stream_in_24_V_user_V_U_vld_out;
wire    regslice_both_stream_in_24_V_user_V_U_ack_in;
wire    regslice_both_stream_in_24_V_last_V_U_apdone_blk;
wire   [0:0] stream_in_24_TLAST_int_regslice;
wire    regslice_both_stream_in_24_V_last_V_U_vld_out;
wire    regslice_both_stream_in_24_V_last_V_U_ack_in;
wire   [23:0] stream_out_24_TDATA_int_regslice;
reg    stream_out_24_TVALID_int_regslice;
wire    stream_out_24_TREADY_int_regslice;
wire    regslice_both_stream_out_24_V_data_V_U_vld_out;
wire    regslice_both_stream_out_24_V_keep_V_U_apdone_blk;
wire    regslice_both_stream_out_24_V_keep_V_U_ack_in_dummy;
wire    regslice_both_stream_out_24_V_keep_V_U_vld_out;
wire    regslice_both_stream_out_24_V_strb_V_U_apdone_blk;
wire    regslice_both_stream_out_24_V_strb_V_U_ack_in_dummy;
wire    regslice_both_stream_out_24_V_strb_V_U_vld_out;
wire    regslice_both_stream_out_24_V_user_V_U_apdone_blk;
wire    regslice_both_stream_out_24_V_user_V_U_ack_in_dummy;
wire    regslice_both_stream_out_24_V_user_V_U_vld_out;
wire    regslice_both_stream_out_24_V_last_V_U_apdone_blk;
wire    regslice_both_stream_out_24_V_last_V_U_ack_in_dummy;
wire    regslice_both_stream_out_24_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

color_convert_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .c1_0(c1_0),
    .c1_1(c1_1),
    .c1_2(c1_2),
    .c2_0(c2_0),
    .c2_1(c2_1),
    .c2_2(c2_2),
    .c3_0(c3_0),
    .c3_1(c3_1),
    .c3_2(c3_2),
    .bias_0(bias_0),
    .bias_1(bias_1),
    .bias_2(bias_2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U1(
    .din0(c1_0_read_reg_1164),
    .din1(r_V_fu_315_p1),
    .dout(r_V_fu_315_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U2(
    .din0(c1_1_read_reg_1159),
    .din1(r_V_4_fu_331_p1),
    .dout(r_V_4_fu_331_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U3(
    .din0(c2_0_read_reg_1149),
    .din1(r_V_6_fu_344_p1),
    .dout(r_V_6_fu_344_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U4(
    .din0(c2_1_read_reg_1144),
    .din1(r_V_7_fu_357_p1),
    .dout(r_V_7_fu_357_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U5(
    .din0(c3_0_read_reg_1134),
    .din1(r_V_9_fu_370_p1),
    .dout(r_V_9_fu_370_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U6(
    .din0(c3_1_read_reg_1129),
    .din1(r_V_10_fu_383_p1),
    .dout(r_V_10_fu_383_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U7(
    .din0(c1_2_read_reg_1154_pp0_iter1_reg),
    .din1(r_V_5_fu_415_p1),
    .dout(r_V_5_fu_415_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U8(
    .din0(c2_2_read_reg_1139_pp0_iter1_reg),
    .din1(r_V_8_fu_452_p1),
    .dout(r_V_8_fu_452_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U9(
    .din0(c3_2_read_reg_1124_pp0_iter1_reg),
    .din1(r_V_11_fu_489_p1),
    .dout(r_V_11_fu_489_p2)
);

color_convert_regslice_both #(
    .DataWidth( 24 ))
regslice_both_stream_in_24_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TDATA),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_data_V_U_ack_in),
    .data_out(stream_in_24_TDATA_int_regslice),
    .vld_out(stream_in_24_TVALID_int_regslice),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_data_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 3 ))
regslice_both_stream_in_24_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TKEEP),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_keep_V_U_ack_in),
    .data_out(stream_in_24_TKEEP_int_regslice),
    .vld_out(regslice_both_stream_in_24_V_keep_V_U_vld_out),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_keep_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 3 ))
regslice_both_stream_in_24_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TSTRB),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_strb_V_U_ack_in),
    .data_out(stream_in_24_TSTRB_int_regslice),
    .vld_out(regslice_both_stream_in_24_V_strb_V_U_vld_out),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_strb_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_24_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TUSER),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_user_V_U_ack_in),
    .data_out(stream_in_24_TUSER_int_regslice),
    .vld_out(regslice_both_stream_in_24_V_user_V_U_vld_out),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_user_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_24_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TLAST),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_last_V_U_ack_in),
    .data_out(stream_in_24_TLAST_int_regslice),
    .vld_out(regslice_both_stream_in_24_V_last_V_U_vld_out),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_last_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 24 ))
regslice_both_stream_out_24_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_out_24_TDATA_int_regslice),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(stream_out_24_TREADY_int_regslice),
    .data_out(stream_out_24_TDATA),
    .vld_out(regslice_both_stream_out_24_V_data_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_data_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 3 ))
regslice_both_stream_out_24_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i1_keep_reg_1169_pp0_iter3_reg),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_24_V_keep_V_U_ack_in_dummy),
    .data_out(stream_out_24_TKEEP),
    .vld_out(regslice_both_stream_out_24_V_keep_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_keep_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 3 ))
regslice_both_stream_out_24_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i1_strb_reg_1174_pp0_iter3_reg),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_24_V_strb_V_U_ack_in_dummy),
    .data_out(stream_out_24_TSTRB),
    .vld_out(regslice_both_stream_out_24_V_strb_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_strb_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_24_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i1_user_reg_1179_pp0_iter3_reg),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_24_V_user_V_U_ack_in_dummy),
    .data_out(stream_out_24_TUSER),
    .vld_out(regslice_both_stream_out_24_V_user_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_user_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_24_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i1_last_reg_1184_pp0_iter3_reg),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_24_V_last_V_U_ack_in_dummy),
    .data_out(stream_out_24_TLAST),
    .vld_out(regslice_both_stream_out_24_V_last_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln1192_10_reg_1309 <= add_ln1192_10_fu_439_p2;
        add_ln1192_17_reg_1339 <= add_ln1192_17_fu_476_p2;
        add_ln1192_1_reg_1279 <= add_ln1192_1_fu_399_p2;
        bias_0_read_reg_1119_pp0_iter2_reg <= bias_0_read_reg_1119_pp0_iter1_reg;
        bias_1_read_reg_1114_pp0_iter2_reg <= bias_1_read_reg_1114_pp0_iter1_reg;
        bias_2_read_reg_1109_pp0_iter2_reg <= bias_2_read_reg_1109_pp0_iter1_reg;
        p_Result_1_reg_1379 <= add_ln1192_3_fu_551_p2[32'd15];
        p_Result_3_reg_1412 <= add_ln1192_9_fu_647_p2[32'd15];
        p_Result_5_reg_1445 <= add_ln1192_15_fu_743_p2[32'd15];
        p_Val2_2_reg_1374 <= {{add_ln1192_3_fu_551_p2[15:8]}};
        p_Val2_5_reg_1407 <= {{add_ln1192_9_fu_647_p2[15:8]}};
        p_Val2_8_reg_1440 <= {{add_ln1192_15_fu_743_p2[15:8]}};
        r_V_11_reg_1349 <= r_V_11_fu_489_p2;
        r_V_5_reg_1289 <= r_V_5_fu_415_p2;
        r_V_8_reg_1319 <= r_V_8_fu_452_p2;
        ret_V_2_reg_1369 <= ret_V_2_fu_541_p2;
        ret_V_3_reg_1314 <= ret_V_3_fu_443_p2;
        ret_V_5_reg_1402 <= ret_V_5_fu_637_p2;
        ret_V_6_reg_1344 <= ret_V_6_fu_480_p2;
        ret_V_8_reg_1435 <= ret_V_8_fu_733_p2;
        ret_V_reg_1284 <= ret_V_fu_403_p2;
        tmp_13_reg_1451 <= add_ln1192_14_fu_739_p2[32'd7];
        tmp_1_reg_1396 <= {{ret_V_2_fu_541_p2[19:16]}};
        tmp_2_reg_1462 <= {{ret_V_8_fu_733_p2[19:16]}};
        tmp_5_reg_1385 <= add_ln1192_2_fu_547_p2[32'd7];
        tmp_9_reg_1418 <= add_ln1192_8_fu_643_p2[32'd7];
        tmp_i1_keep_reg_1169_pp0_iter2_reg <= tmp_i1_keep_reg_1169_pp0_iter1_reg;
        tmp_i1_keep_reg_1169_pp0_iter3_reg <= tmp_i1_keep_reg_1169_pp0_iter2_reg;
        tmp_i1_last_reg_1184_pp0_iter2_reg <= tmp_i1_last_reg_1184_pp0_iter1_reg;
        tmp_i1_last_reg_1184_pp0_iter3_reg <= tmp_i1_last_reg_1184_pp0_iter2_reg;
        tmp_i1_strb_reg_1174_pp0_iter2_reg <= tmp_i1_strb_reg_1174_pp0_iter1_reg;
        tmp_i1_strb_reg_1174_pp0_iter3_reg <= tmp_i1_strb_reg_1174_pp0_iter2_reg;
        tmp_i1_user_reg_1179_pp0_iter2_reg <= tmp_i1_user_reg_1179_pp0_iter1_reg;
        tmp_i1_user_reg_1179_pp0_iter3_reg <= tmp_i1_user_reg_1179_pp0_iter2_reg;
        tmp_reg_1429 <= {{ret_V_5_fu_637_p2[19:16]}};
        trunc_ln1192_10_reg_1354 <= trunc_ln1192_10_fu_495_p1;
        trunc_ln1192_11_reg_1359 <= trunc_ln1192_11_fu_499_p1;
        trunc_ln1192_12_reg_1364 <= trunc_ln1192_12_fu_503_p1;
        trunc_ln1192_14_reg_1214_pp0_iter2_reg <= trunc_ln1192_14_reg_1214_pp0_iter1_reg;
        trunc_ln1192_1_reg_1299 <= trunc_ln1192_1_fu_425_p1;
        trunc_ln1192_2_reg_1304 <= trunc_ln1192_2_fu_429_p1;
        trunc_ln1192_3_reg_1204_pp0_iter2_reg <= trunc_ln1192_3_reg_1204_pp0_iter1_reg;
        trunc_ln1192_5_reg_1324 <= trunc_ln1192_5_fu_458_p1;
        trunc_ln1192_6_reg_1329 <= trunc_ln1192_6_fu_462_p1;
        trunc_ln1192_7_reg_1334 <= trunc_ln1192_7_fu_466_p1;
        trunc_ln1192_8_reg_1209_pp0_iter2_reg <= trunc_ln1192_8_reg_1209_pp0_iter1_reg;
        trunc_ln1192_reg_1294 <= trunc_ln1192_fu_421_p1;
        trunc_ln415_3_reg_1391 <= {{add_ln1192_3_fu_551_p2[14:8]}};
        trunc_ln415_4_reg_1424 <= {{add_ln1192_9_fu_647_p2[14:8]}};
        trunc_ln415_5_reg_1457 <= {{add_ln1192_15_fu_743_p2[14:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_0_read_reg_1119 <= bias_0;
        bias_0_read_reg_1119_pp0_iter1_reg <= bias_0_read_reg_1119;
        bias_1_read_reg_1114 <= bias_1;
        bias_1_read_reg_1114_pp0_iter1_reg <= bias_1_read_reg_1114;
        bias_2_read_reg_1109 <= bias_2;
        bias_2_read_reg_1109_pp0_iter1_reg <= bias_2_read_reg_1109;
        c1_0_read_reg_1164 <= c1_0;
        c1_1_read_reg_1159 <= c1_1;
        c1_2_read_reg_1154 <= c1_2;
        c1_2_read_reg_1154_pp0_iter1_reg <= c1_2_read_reg_1154;
        c2_0_read_reg_1149 <= c2_0;
        c2_1_read_reg_1144 <= c2_1;
        c2_2_read_reg_1139 <= c2_2;
        c2_2_read_reg_1139_pp0_iter1_reg <= c2_2_read_reg_1139;
        c3_0_read_reg_1134 <= c3_0;
        c3_1_read_reg_1129 <= c3_1;
        c3_2_read_reg_1124 <= c3_2;
        c3_2_read_reg_1124_pp0_iter1_reg <= c3_2_read_reg_1124;
        r_V_10_reg_1269 <= r_V_10_fu_383_p2;
        r_V_4_reg_1229 <= r_V_4_fu_331_p2;
        r_V_6_reg_1239 <= r_V_6_fu_344_p2;
        r_V_7_reg_1249 <= r_V_7_fu_357_p2;
        r_V_9_reg_1259 <= r_V_9_fu_370_p2;
        r_V_reg_1219 <= r_V_fu_315_p2;
        tmp_i1_keep_reg_1169 <= stream_in_24_TKEEP_int_regslice;
        tmp_i1_keep_reg_1169_pp0_iter1_reg <= tmp_i1_keep_reg_1169;
        tmp_i1_last_reg_1184 <= stream_in_24_TLAST_int_regslice;
        tmp_i1_last_reg_1184_pp0_iter1_reg <= tmp_i1_last_reg_1184;
        tmp_i1_strb_reg_1174 <= stream_in_24_TSTRB_int_regslice;
        tmp_i1_strb_reg_1174_pp0_iter1_reg <= tmp_i1_strb_reg_1174;
        tmp_i1_user_reg_1179 <= stream_in_24_TUSER_int_regslice;
        tmp_i1_user_reg_1179_pp0_iter1_reg <= tmp_i1_user_reg_1179;
        trunc_ln1115_1_reg_1234 <= trunc_ln1115_1_fu_337_p1;
        trunc_ln1115_2_reg_1244 <= trunc_ln1115_2_fu_350_p1;
        trunc_ln1115_3_reg_1254 <= trunc_ln1115_3_fu_363_p1;
        trunc_ln1115_4_reg_1264 <= trunc_ln1115_4_fu_376_p1;
        trunc_ln1115_5_reg_1274 <= trunc_ln1115_5_fu_389_p1;
        trunc_ln1115_reg_1224 <= trunc_ln1115_fu_321_p1;
        trunc_ln1192_14_reg_1214 <= trunc_ln1192_14_fu_305_p1;
        trunc_ln1192_14_reg_1214_pp0_iter1_reg <= trunc_ln1192_14_reg_1214;
        trunc_ln1192_3_reg_1204 <= trunc_ln1192_3_fu_297_p1;
        trunc_ln1192_3_reg_1204_pp0_iter1_reg <= trunc_ln1192_3_reg_1204;
        trunc_ln1192_8_reg_1209 <= trunc_ln1192_8_fu_301_p1;
        trunc_ln1192_8_reg_1209_pp0_iter1_reg <= trunc_ln1192_8_reg_1209;
        v_p1_V_reg_1189 <= v_p1_V_fu_273_p1;
        v_p2_V_reg_1194 <= {{stream_in_24_TDATA_int_regslice[15:8]}};
        v_p3_V_reg_1199 <= {{stream_in_24_TDATA_int_regslice[23:16]}};
        v_p3_V_reg_1199_pp0_iter1_reg <= v_p3_V_reg_1199;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_24_TDATA_blk_n = stream_in_24_TVALID_int_regslice;
    end else begin
        stream_in_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_24_TREADY_int_regslice = 1'b1;
    end else begin
        stream_in_24_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        stream_out_24_TDATA_blk_n = stream_out_24_TREADY_int_regslice;
    end else begin
        stream_out_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        stream_out_24_TVALID_int_regslice = 1'b1;
    end else begin
        stream_out_24_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_1_fu_933_p2 = ((tmp_reg_1429 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_1034_p2 = ((tmp_2_reg_1462 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_832_p2 = ((tmp_1_reg_1396 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_938_p2 = ((tmp_reg_1429 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_1039_p2 = ((tmp_2_reg_1462 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_837_p2 = ((tmp_1_reg_1396 == 4'd0) ? 1'b1 : 1'b0);

assign add_ln1192_10_fu_439_p2 = (trunc_ln1115_3_reg_1254 + trunc_ln1115_2_reg_1244);

assign add_ln1192_12_fu_722_p2 = (add_ln1192_17_reg_1339 + trunc_ln1192_12_reg_1364);

assign add_ln1192_14_fu_739_p2 = (trunc_ln1192_11_reg_1359 + trunc_ln1192_10_reg_1354);

assign add_ln1192_15_fu_743_p2 = (trunc_ln1192_s_fu_726_p3 + add_ln1192_12_fu_722_p2);

assign add_ln1192_17_fu_476_p2 = (trunc_ln1115_5_reg_1274 + trunc_ln1115_4_reg_1264);

assign add_ln1192_1_fu_399_p2 = (trunc_ln1115_1_reg_1234 + trunc_ln1115_reg_1224);

assign add_ln1192_2_fu_547_p2 = (trunc_ln1192_1_reg_1299 + trunc_ln1192_reg_1294);

assign add_ln1192_3_fu_551_p2 = (trunc_ln1192_4_fu_534_p3 + add_ln1192_fu_530_p2);

assign add_ln1192_6_fu_626_p2 = (add_ln1192_10_reg_1309 + trunc_ln1192_7_reg_1334);

assign add_ln1192_8_fu_643_p2 = (trunc_ln1192_6_reg_1329 + trunc_ln1192_5_reg_1324);

assign add_ln1192_9_fu_647_p2 = (trunc_ln1192_9_fu_630_p3 + add_ln1192_6_fu_626_p2);

assign add_ln1192_fu_530_p2 = (add_ln1192_1_reg_1279 + trunc_ln1192_2_reg_1304);

assign add_ln416_1_fu_914_p2 = (zext_ln415_3_fu_906_p1 + trunc_ln415_4_reg_1424);

assign add_ln416_2_fu_1015_p2 = (zext_ln415_5_fu_1007_p1 + trunc_ln415_5_reg_1457);

assign add_ln416_fu_813_p2 = (zext_ln415_1_fu_805_p1 + trunc_ln415_3_reg_1391);

assign and_ln781_1_fu_964_p2 = (p_Result_3_reg_1412 & and_ln781_4_fu_958_p2);

assign and_ln781_2_fu_1065_p2 = (p_Result_5_reg_1445 & and_ln781_5_fu_1059_p2);

assign and_ln781_3_fu_857_p2 = (carry_1_fu_826_p2 & Range1_all_ones_fu_832_p2);

assign and_ln781_4_fu_958_p2 = (carry_3_fu_927_p2 & Range1_all_ones_1_fu_933_p2);

assign and_ln781_5_fu_1059_p2 = (carry_5_fu_1028_p2 & Range1_all_ones_2_fu_1034_p2);

assign and_ln781_fu_863_p2 = (p_Result_1_reg_1379 & and_ln781_3_fu_857_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((stream_out_24_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((stream_in_24_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((stream_out_24_TREADY_int_regslice == 1'b0) | (regslice_both_stream_out_24_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((stream_out_24_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((stream_in_24_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((stream_out_24_TREADY_int_regslice == 1'b0) | (regslice_both_stream_out_24_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((stream_out_24_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((stream_in_24_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((stream_out_24_TREADY_int_regslice == 1'b0) | (regslice_both_stream_out_24_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (stream_in_24_TVALID_int_regslice == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = (stream_out_24_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((stream_out_24_TREADY_int_regslice == 1'b0) | (regslice_both_stream_out_24_V_data_V_U_apdone_blk == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign carry_1_fu_826_p2 = (tmp_6_fu_818_p3 ^ 1'd1);

assign carry_3_fu_927_p2 = (tmp_10_fu_919_p3 ^ 1'd1);

assign carry_5_fu_1028_p2 = (tmp_14_fu_1020_p3 ^ 1'd1);

assign deleted_zeros_1_fu_951_p3 = ((p_Result_3_reg_1412[0:0] == 1'b1) ? select_ln778_1_fu_943_p3 : Range1_all_zeros_1_fu_938_p2);

assign deleted_zeros_2_fu_1052_p3 = ((p_Result_5_reg_1445[0:0] == 1'b1) ? select_ln778_2_fu_1044_p3 : Range1_all_zeros_2_fu_1039_p2);

assign deleted_zeros_fu_850_p3 = ((p_Result_1_reg_1379[0:0] == 1'b1) ? select_ln778_fu_842_p3 : Range1_all_zeros_fu_837_p2);

assign out1_V_fu_888_p3 = ((p_Result_s_fu_795_p3[0:0] == 1'b1) ? zext_ln394_fu_876_p1 : select_ln394_fu_880_p3);

assign out2_V_fu_989_p3 = ((p_Result_2_fu_896_p3[0:0] == 1'b1) ? zext_ln394_1_fu_977_p1 : select_ln394_1_fu_981_p3);

assign out3_V_fu_1090_p3 = ((p_Result_4_fu_997_p3[0:0] == 1'b1) ? zext_ln394_2_fu_1078_p1 : select_ln394_2_fu_1082_p3);

assign p_Result_2_fu_896_p3 = ret_V_5_reg_1402[32'd19];

assign p_Result_4_fu_997_p3 = ret_V_8_reg_1435[32'd19];

assign p_Result_s_fu_795_p3 = ret_V_2_reg_1369[32'd19];

assign p_Val2_3_fu_808_p2 = (zext_ln415_fu_802_p1 + p_Val2_2_reg_1374);

assign p_Val2_6_fu_909_p2 = (zext_ln415_2_fu_903_p1 + p_Val2_5_reg_1407);

assign p_Val2_9_fu_1010_p2 = (zext_ln415_4_fu_1004_p1 + p_Val2_8_reg_1440);

assign r_V_10_fu_383_p1 = zext_ln1118_1_fu_325_p1;

assign r_V_11_fu_489_p1 = zext_ln1118_2_fu_409_p1;

assign r_V_4_fu_331_p1 = zext_ln1118_1_fu_325_p1;

assign r_V_5_fu_415_p1 = zext_ln1118_2_fu_409_p1;

assign r_V_6_fu_344_p1 = zext_ln1118_fu_309_p1;

assign r_V_7_fu_357_p1 = zext_ln1118_1_fu_325_p1;

assign r_V_8_fu_452_p1 = zext_ln1118_2_fu_409_p1;

assign r_V_9_fu_370_p1 = zext_ln1118_fu_309_p1;

assign r_V_fu_315_p1 = zext_ln1118_fu_309_p1;

assign ret_V_1_fu_513_p2 = ($signed(sext_ln703_2_fu_507_p1) + $signed(sext_ln703_3_fu_510_p1));

assign ret_V_2_fu_541_p2 = ($signed(sext_ln1192_fu_526_p1) + $signed(ret_V_1_fu_513_p2));

assign ret_V_3_fu_443_p2 = ($signed(sext_ln703_5_fu_436_p1) + $signed(sext_ln703_4_fu_433_p1));

assign ret_V_4_fu_609_p2 = ($signed(sext_ln703_6_fu_603_p1) + $signed(sext_ln703_7_fu_606_p1));

assign ret_V_5_fu_637_p2 = ($signed(sext_ln1192_1_fu_622_p1) + $signed(ret_V_4_fu_609_p2));

assign ret_V_6_fu_480_p2 = ($signed(sext_ln703_9_fu_473_p1) + $signed(sext_ln703_8_fu_470_p1));

assign ret_V_7_fu_705_p2 = ($signed(sext_ln703_10_fu_699_p1) + $signed(sext_ln703_11_fu_702_p1));

assign ret_V_8_fu_733_p2 = ($signed(sext_ln1192_2_fu_718_p1) + $signed(ret_V_7_fu_705_p2));

assign ret_V_fu_403_p2 = ($signed(sext_ln703_1_fu_396_p1) + $signed(sext_ln703_fu_393_p1));

assign rhs_2_fu_519_p3 = {{bias_0_read_reg_1119_pp0_iter2_reg}, {8'd0}};

assign rhs_5_fu_615_p3 = {{bias_1_read_reg_1114_pp0_iter2_reg}, {8'd0}};

assign rhs_8_fu_711_p3 = {{bias_2_read_reg_1109_pp0_iter2_reg}, {8'd0}};

assign select_ln394_1_fu_981_p3 = ((deleted_zeros_1_fu_951_p3[0:0] == 1'b1) ? p_Val2_6_fu_909_p2 : 8'd255);

assign select_ln394_2_fu_1082_p3 = ((deleted_zeros_2_fu_1052_p3[0:0] == 1'b1) ? p_Val2_9_fu_1010_p2 : 8'd255);

assign select_ln394_fu_880_p3 = ((deleted_zeros_fu_850_p3[0:0] == 1'b1) ? p_Val2_3_fu_808_p2 : 8'd255);

assign select_ln396_1_fu_969_p3 = ((and_ln781_1_fu_964_p2[0:0] == 1'b1) ? add_ln416_1_fu_914_p2 : 7'd0);

assign select_ln396_2_fu_1070_p3 = ((and_ln781_2_fu_1065_p2[0:0] == 1'b1) ? add_ln416_2_fu_1015_p2 : 7'd0);

assign select_ln396_fu_868_p3 = ((and_ln781_fu_863_p2[0:0] == 1'b1) ? add_ln416_fu_813_p2 : 7'd0);

assign select_ln778_1_fu_943_p3 = ((tmp_10_fu_919_p3[0:0] == 1'b1) ? Range1_all_zeros_1_fu_938_p2 : Range1_all_ones_1_fu_933_p2);

assign select_ln778_2_fu_1044_p3 = ((tmp_14_fu_1020_p3[0:0] == 1'b1) ? Range1_all_zeros_2_fu_1039_p2 : Range1_all_ones_2_fu_1034_p2);

assign select_ln778_fu_842_p3 = ((tmp_6_fu_818_p3[0:0] == 1'b1) ? Range1_all_zeros_fu_837_p2 : Range1_all_ones_fu_832_p2);

assign sext_ln1192_1_fu_622_p1 = $signed(rhs_5_fu_615_p3);

assign sext_ln1192_2_fu_718_p1 = $signed(rhs_8_fu_711_p3);

assign sext_ln1192_fu_526_p1 = $signed(rhs_2_fu_519_p3);

assign sext_ln703_10_fu_699_p1 = $signed(ret_V_6_reg_1344);

assign sext_ln703_11_fu_702_p1 = r_V_11_reg_1349;

assign sext_ln703_1_fu_396_p1 = r_V_4_reg_1229;

assign sext_ln703_2_fu_507_p1 = $signed(ret_V_reg_1284);

assign sext_ln703_3_fu_510_p1 = r_V_5_reg_1289;

assign sext_ln703_4_fu_433_p1 = r_V_6_reg_1239;

assign sext_ln703_5_fu_436_p1 = r_V_7_reg_1249;

assign sext_ln703_6_fu_603_p1 = $signed(ret_V_3_reg_1314);

assign sext_ln703_7_fu_606_p1 = r_V_8_reg_1319;

assign sext_ln703_8_fu_470_p1 = r_V_9_reg_1259;

assign sext_ln703_9_fu_473_p1 = r_V_10_reg_1269;

assign sext_ln703_fu_393_p1 = r_V_reg_1219;

assign stream_in_24_TREADY = regslice_both_stream_in_24_V_data_V_U_ack_in;

assign stream_out_24_TDATA_int_regslice = {{{out3_V_fu_1090_p3}, {out2_V_fu_989_p3}}, {out1_V_fu_888_p3}};

assign stream_out_24_TVALID = regslice_both_stream_out_24_V_data_V_U_vld_out;

assign tmp_10_fu_919_p3 = p_Val2_6_fu_909_p2[32'd7];

assign tmp_14_fu_1020_p3 = p_Val2_9_fu_1010_p2[32'd7];

assign tmp_6_fu_818_p3 = p_Val2_3_fu_808_p2[32'd7];

assign trunc_ln1115_1_fu_337_p1 = r_V_4_fu_331_p2[15:0];

assign trunc_ln1115_2_fu_350_p1 = r_V_6_fu_344_p2[15:0];

assign trunc_ln1115_3_fu_363_p1 = r_V_7_fu_357_p2[15:0];

assign trunc_ln1115_4_fu_376_p1 = r_V_9_fu_370_p2[15:0];

assign trunc_ln1115_5_fu_389_p1 = r_V_10_fu_383_p2[15:0];

assign trunc_ln1115_fu_321_p1 = r_V_fu_315_p2[15:0];

assign trunc_ln1192_10_fu_495_p1 = r_V_11_fu_489_p2[7:0];

assign trunc_ln1192_11_fu_499_p1 = add_ln1192_17_fu_476_p2[7:0];

assign trunc_ln1192_12_fu_503_p1 = r_V_11_fu_489_p2[15:0];

assign trunc_ln1192_14_fu_305_p1 = bias_2[7:0];

assign trunc_ln1192_1_fu_425_p1 = add_ln1192_1_fu_399_p2[7:0];

assign trunc_ln1192_2_fu_429_p1 = r_V_5_fu_415_p2[15:0];

assign trunc_ln1192_3_fu_297_p1 = bias_0[7:0];

assign trunc_ln1192_4_fu_534_p3 = {{trunc_ln1192_3_reg_1204_pp0_iter2_reg}, {8'd0}};

assign trunc_ln1192_5_fu_458_p1 = r_V_8_fu_452_p2[7:0];

assign trunc_ln1192_6_fu_462_p1 = add_ln1192_10_fu_439_p2[7:0];

assign trunc_ln1192_7_fu_466_p1 = r_V_8_fu_452_p2[15:0];

assign trunc_ln1192_8_fu_301_p1 = bias_1[7:0];

assign trunc_ln1192_9_fu_630_p3 = {{trunc_ln1192_8_reg_1209_pp0_iter2_reg}, {8'd0}};

assign trunc_ln1192_fu_421_p1 = r_V_5_fu_415_p2[7:0];

assign trunc_ln1192_s_fu_726_p3 = {{trunc_ln1192_14_reg_1214_pp0_iter2_reg}, {8'd0}};

assign v_p1_V_fu_273_p1 = stream_in_24_TDATA_int_regslice[7:0];

assign zext_ln1118_1_fu_325_p1 = v_p2_V_reg_1194;

assign zext_ln1118_2_fu_409_p1 = v_p3_V_reg_1199_pp0_iter1_reg;

assign zext_ln1118_fu_309_p1 = v_p1_V_reg_1189;

assign zext_ln394_1_fu_977_p1 = select_ln396_1_fu_969_p3;

assign zext_ln394_2_fu_1078_p1 = select_ln396_2_fu_1070_p3;

assign zext_ln394_fu_876_p1 = select_ln396_fu_868_p3;

assign zext_ln415_1_fu_805_p1 = tmp_5_reg_1385;

assign zext_ln415_2_fu_903_p1 = tmp_9_reg_1418;

assign zext_ln415_3_fu_906_p1 = tmp_9_reg_1418;

assign zext_ln415_4_fu_1004_p1 = tmp_13_reg_1451;

assign zext_ln415_5_fu_1007_p1 = tmp_13_reg_1451;

assign zext_ln415_fu_802_p1 = tmp_5_reg_1385;

endmodule //color_convert
