-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity color_convert is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_in_24_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_24_TVALID : IN STD_LOGIC;
    stream_in_24_TREADY : OUT STD_LOGIC;
    stream_in_24_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_24_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_24_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_24_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_out_24_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_out_24_TVALID : OUT STD_LOGIC;
    stream_out_24_TREADY : IN STD_LOGIC;
    stream_out_24_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_out_24_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_out_24_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_24_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of color_convert is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "color_convert_color_convert,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.520000,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1664,HLS_SYN_LUT=1815,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal c1_0 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_1 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_0 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_1 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_0 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_1 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_2 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_2 : STD_LOGIC_VECTOR (9 downto 0);
    signal stream_in_24_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_out_24_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal bias_2_read_reg_1109 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal regslice_both_stream_out_24_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bias_2_read_reg_1109_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_2_read_reg_1109_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_1_read_reg_1114 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_1_read_reg_1114_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_1_read_reg_1114_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_0_read_reg_1119 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_0_read_reg_1119_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_0_read_reg_1119_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_2_read_reg_1124 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_2_read_reg_1124_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_1_read_reg_1129 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_0_read_reg_1134 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_2_read_reg_1139 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_2_read_reg_1139_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_1_read_reg_1144 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_0_read_reg_1149 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_2_read_reg_1154 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_2_read_reg_1154_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_1_read_reg_1159 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_0_read_reg_1164 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_i1_keep_reg_1169 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i1_keep_reg_1169_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i1_keep_reg_1169_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i1_keep_reg_1169_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i1_strb_reg_1174 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i1_strb_reg_1174_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i1_strb_reg_1174_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i1_strb_reg_1174_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i1_user_reg_1179 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_user_reg_1179_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_user_reg_1179_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_user_reg_1179_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_last_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_last_reg_1184_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_last_reg_1184_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_last_reg_1184_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal v_p1_V_fu_273_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_p1_V_reg_1189 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_p2_V_reg_1194 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_p3_V_reg_1199 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_p3_V_reg_1199_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_3_fu_297_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_3_reg_1204 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_3_reg_1204_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_3_reg_1204_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_8_fu_301_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_8_reg_1209 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_8_reg_1209_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_8_reg_1209_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_14_fu_305_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_14_reg_1214 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_14_reg_1214_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_14_reg_1214_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_315_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_reg_1219 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1115_fu_321_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1115_reg_1224 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_4_fu_331_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_4_reg_1229 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1115_1_fu_337_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1115_1_reg_1234 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_fu_344_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_6_reg_1239 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1115_2_fu_350_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1115_2_reg_1244 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_7_fu_357_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_7_reg_1249 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1115_3_fu_363_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1115_3_reg_1254 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_9_fu_370_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_9_reg_1259 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1115_4_fu_376_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1115_4_reg_1264 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_10_fu_383_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_10_reg_1269 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1115_5_fu_389_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1115_5_reg_1274 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_1_fu_399_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_1_reg_1279 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_403_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_reg_1284 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_5_fu_415_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_5_reg_1289 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1192_fu_421_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_reg_1294 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_1_fu_425_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_1_reg_1299 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_2_fu_429_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1192_2_reg_1304 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_10_fu_439_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_10_reg_1309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_3_fu_443_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_3_reg_1314 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_8_fu_452_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_8_reg_1319 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1192_5_fu_458_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_5_reg_1324 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_6_fu_462_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_6_reg_1329 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_7_fu_466_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1192_7_reg_1334 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_17_fu_476_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_17_reg_1339 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_6_fu_480_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_6_reg_1344 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_11_fu_489_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_11_reg_1349 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1192_10_fu_495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_10_reg_1354 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_11_fu_499_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_11_reg_1359 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1192_12_fu_503_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1192_12_reg_1364 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_2_fu_541_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_2_reg_1369 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_2_reg_1374 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_reg_1379 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1385 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln415_3_reg_1391 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_reg_1396 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_5_fu_637_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_5_reg_1402 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_5_reg_1407 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_reg_1412 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln415_4_reg_1424 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_1429 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_8_fu_733_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_8_reg_1435 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_8_reg_1440 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_reg_1445 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1451 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln415_5_reg_1457 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_reg_1462 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_fu_315_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1118_fu_309_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_4_fu_331_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1118_1_fu_325_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_6_fu_344_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_fu_357_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_9_fu_370_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_10_fu_383_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln703_1_fu_396_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_fu_393_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_5_fu_415_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1118_2_fu_409_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_5_fu_436_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_4_fu_433_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_8_fu_452_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln703_9_fu_473_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_8_fu_470_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_11_fu_489_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln703_2_fu_507_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln703_3_fu_510_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_2_fu_519_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1192_fu_526_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_1_fu_513_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln1192_4_fu_534_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_fu_530_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_3_fu_551_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_2_fu_547_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln703_6_fu_603_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln703_7_fu_606_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_5_fu_615_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1192_1_fu_622_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_4_fu_609_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln1192_9_fu_630_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_6_fu_626_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_9_fu_647_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_8_fu_643_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln703_10_fu_699_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln703_11_fu_702_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_8_fu_711_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1192_2_fu_718_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_7_fu_705_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln1192_s_fu_726_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_12_fu_722_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_15_fu_743_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_14_fu_739_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_fu_802_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_1_fu_805_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_3_fu_808_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_818_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln778_fu_842_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_3_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_fu_813_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln396_fu_868_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal deleted_zeros_fu_850_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_795_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln394_fu_876_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln394_fu_880_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_2_fu_903_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_3_fu_906_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_6_fu_909_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_919_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln778_1_fu_943_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_3_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_4_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_1_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_1_fu_914_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln396_1_fu_969_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal deleted_zeros_1_fu_951_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_896_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln394_1_fu_977_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln394_1_fu_981_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_4_fu_1004_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_5_fu_1007_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_9_fu_1010_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1020_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln778_2_fu_1044_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_5_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_5_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_2_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_2_fu_1015_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln396_2_fu_1070_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal deleted_zeros_2_fu_1052_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_997_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln394_2_fu_1078_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln394_2_fu_1082_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out3_V_fu_1090_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out2_V_fu_989_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out1_V_fu_888_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_stream_in_24_V_data_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_24_TVALID_int_regslice : STD_LOGIC;
    signal stream_in_24_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_in_24_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_24_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TKEEP_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_stream_in_24_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_24_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_24_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TSTRB_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_stream_in_24_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_24_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_24_V_user_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_stream_in_24_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_24_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_24_V_last_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_stream_in_24_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_24_V_last_V_U_ack_in : STD_LOGIC;
    signal stream_out_24_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_out_24_TVALID_int_regslice : STD_LOGIC;
    signal stream_out_24_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_out_24_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_24_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_24_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_24_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_24_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_24_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_24_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_24_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_24_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_24_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_24_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_24_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_24_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component color_convert_mul_10s_8ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component color_convert_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        c1_0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c1_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c1_2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c2_0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c2_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c2_2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c3_0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c3_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c3_2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        bias_0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        bias_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        bias_2 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component color_convert_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    control_s_axi_U : component color_convert_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        c1_0 => c1_0,
        c1_1 => c1_1,
        c1_2 => c1_2,
        c2_0 => c2_0,
        c2_1 => c2_1,
        c2_2 => c2_2,
        c3_0 => c3_0,
        c3_1 => c3_1,
        c3_2 => c3_2,
        bias_0 => bias_0,
        bias_1 => bias_1,
        bias_2 => bias_2);

    mul_10s_8ns_18_1_1_U1 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c1_0_read_reg_1164,
        din1 => r_V_fu_315_p1,
        dout => r_V_fu_315_p2);

    mul_10s_8ns_18_1_1_U2 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c1_1_read_reg_1159,
        din1 => r_V_4_fu_331_p1,
        dout => r_V_4_fu_331_p2);

    mul_10s_8ns_18_1_1_U3 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c2_0_read_reg_1149,
        din1 => r_V_6_fu_344_p1,
        dout => r_V_6_fu_344_p2);

    mul_10s_8ns_18_1_1_U4 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c2_1_read_reg_1144,
        din1 => r_V_7_fu_357_p1,
        dout => r_V_7_fu_357_p2);

    mul_10s_8ns_18_1_1_U5 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c3_0_read_reg_1134,
        din1 => r_V_9_fu_370_p1,
        dout => r_V_9_fu_370_p2);

    mul_10s_8ns_18_1_1_U6 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c3_1_read_reg_1129,
        din1 => r_V_10_fu_383_p1,
        dout => r_V_10_fu_383_p2);

    mul_10s_8ns_18_1_1_U7 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c1_2_read_reg_1154_pp0_iter1_reg,
        din1 => r_V_5_fu_415_p1,
        dout => r_V_5_fu_415_p2);

    mul_10s_8ns_18_1_1_U8 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c2_2_read_reg_1139_pp0_iter1_reg,
        din1 => r_V_8_fu_452_p1,
        dout => r_V_8_fu_452_p2);

    mul_10s_8ns_18_1_1_U9 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c3_2_read_reg_1124_pp0_iter1_reg,
        din1 => r_V_11_fu_489_p1,
        dout => r_V_11_fu_489_p2);

    regslice_both_stream_in_24_V_data_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TDATA,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_data_V_U_ack_in,
        data_out => stream_in_24_TDATA_int_regslice,
        vld_out => stream_in_24_TVALID_int_regslice,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_data_V_U_apdone_blk);

    regslice_both_stream_in_24_V_keep_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TKEEP,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_keep_V_U_ack_in,
        data_out => stream_in_24_TKEEP_int_regslice,
        vld_out => regslice_both_stream_in_24_V_keep_V_U_vld_out,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_keep_V_U_apdone_blk);

    regslice_both_stream_in_24_V_strb_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TSTRB,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_strb_V_U_ack_in,
        data_out => stream_in_24_TSTRB_int_regslice,
        vld_out => regslice_both_stream_in_24_V_strb_V_U_vld_out,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_strb_V_U_apdone_blk);

    regslice_both_stream_in_24_V_user_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TUSER,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_user_V_U_ack_in,
        data_out => stream_in_24_TUSER_int_regslice,
        vld_out => regslice_both_stream_in_24_V_user_V_U_vld_out,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_user_V_U_apdone_blk);

    regslice_both_stream_in_24_V_last_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TLAST,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_last_V_U_ack_in,
        data_out => stream_in_24_TLAST_int_regslice,
        vld_out => regslice_both_stream_in_24_V_last_V_U_vld_out,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_last_V_U_apdone_blk);

    regslice_both_stream_out_24_V_data_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_out_24_TDATA_int_regslice,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => stream_out_24_TREADY_int_regslice,
        data_out => stream_out_24_TDATA,
        vld_out => regslice_both_stream_out_24_V_data_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_data_V_U_apdone_blk);

    regslice_both_stream_out_24_V_keep_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_i1_keep_reg_1169_pp0_iter3_reg,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_24_V_keep_V_U_ack_in_dummy,
        data_out => stream_out_24_TKEEP,
        vld_out => regslice_both_stream_out_24_V_keep_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_keep_V_U_apdone_blk);

    regslice_both_stream_out_24_V_strb_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_i1_strb_reg_1174_pp0_iter3_reg,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_24_V_strb_V_U_ack_in_dummy,
        data_out => stream_out_24_TSTRB,
        vld_out => regslice_both_stream_out_24_V_strb_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_strb_V_U_apdone_blk);

    regslice_both_stream_out_24_V_user_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_i1_user_reg_1179_pp0_iter3_reg,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_24_V_user_V_U_ack_in_dummy,
        data_out => stream_out_24_TUSER,
        vld_out => regslice_both_stream_out_24_V_user_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_user_V_U_apdone_blk);

    regslice_both_stream_out_24_V_last_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_i1_last_reg_1184_pp0_iter3_reg,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_24_V_last_V_U_ack_in_dummy,
        data_out => stream_out_24_TLAST,
        vld_out => regslice_both_stream_out_24_V_last_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_10_reg_1309 <= add_ln1192_10_fu_439_p2;
                add_ln1192_17_reg_1339 <= add_ln1192_17_fu_476_p2;
                add_ln1192_1_reg_1279 <= add_ln1192_1_fu_399_p2;
                bias_0_read_reg_1119_pp0_iter2_reg <= bias_0_read_reg_1119_pp0_iter1_reg;
                bias_1_read_reg_1114_pp0_iter2_reg <= bias_1_read_reg_1114_pp0_iter1_reg;
                bias_2_read_reg_1109_pp0_iter2_reg <= bias_2_read_reg_1109_pp0_iter1_reg;
                p_Result_1_reg_1379 <= add_ln1192_3_fu_551_p2(15 downto 15);
                p_Result_3_reg_1412 <= add_ln1192_9_fu_647_p2(15 downto 15);
                p_Result_5_reg_1445 <= add_ln1192_15_fu_743_p2(15 downto 15);
                p_Val2_2_reg_1374 <= add_ln1192_3_fu_551_p2(15 downto 8);
                p_Val2_5_reg_1407 <= add_ln1192_9_fu_647_p2(15 downto 8);
                p_Val2_8_reg_1440 <= add_ln1192_15_fu_743_p2(15 downto 8);
                r_V_11_reg_1349 <= r_V_11_fu_489_p2;
                r_V_5_reg_1289 <= r_V_5_fu_415_p2;
                r_V_8_reg_1319 <= r_V_8_fu_452_p2;
                ret_V_2_reg_1369 <= ret_V_2_fu_541_p2;
                ret_V_3_reg_1314 <= ret_V_3_fu_443_p2;
                ret_V_5_reg_1402 <= ret_V_5_fu_637_p2;
                ret_V_6_reg_1344 <= ret_V_6_fu_480_p2;
                ret_V_8_reg_1435 <= ret_V_8_fu_733_p2;
                ret_V_reg_1284 <= ret_V_fu_403_p2;
                tmp_13_reg_1451 <= add_ln1192_14_fu_739_p2(7 downto 7);
                tmp_1_reg_1396 <= ret_V_2_fu_541_p2(19 downto 16);
                tmp_2_reg_1462 <= ret_V_8_fu_733_p2(19 downto 16);
                tmp_5_reg_1385 <= add_ln1192_2_fu_547_p2(7 downto 7);
                tmp_9_reg_1418 <= add_ln1192_8_fu_643_p2(7 downto 7);
                tmp_i1_keep_reg_1169_pp0_iter2_reg <= tmp_i1_keep_reg_1169_pp0_iter1_reg;
                tmp_i1_keep_reg_1169_pp0_iter3_reg <= tmp_i1_keep_reg_1169_pp0_iter2_reg;
                tmp_i1_last_reg_1184_pp0_iter2_reg <= tmp_i1_last_reg_1184_pp0_iter1_reg;
                tmp_i1_last_reg_1184_pp0_iter3_reg <= tmp_i1_last_reg_1184_pp0_iter2_reg;
                tmp_i1_strb_reg_1174_pp0_iter2_reg <= tmp_i1_strb_reg_1174_pp0_iter1_reg;
                tmp_i1_strb_reg_1174_pp0_iter3_reg <= tmp_i1_strb_reg_1174_pp0_iter2_reg;
                tmp_i1_user_reg_1179_pp0_iter2_reg <= tmp_i1_user_reg_1179_pp0_iter1_reg;
                tmp_i1_user_reg_1179_pp0_iter3_reg <= tmp_i1_user_reg_1179_pp0_iter2_reg;
                tmp_reg_1429 <= ret_V_5_fu_637_p2(19 downto 16);
                trunc_ln1192_10_reg_1354 <= trunc_ln1192_10_fu_495_p1;
                trunc_ln1192_11_reg_1359 <= trunc_ln1192_11_fu_499_p1;
                trunc_ln1192_12_reg_1364 <= trunc_ln1192_12_fu_503_p1;
                trunc_ln1192_14_reg_1214_pp0_iter2_reg <= trunc_ln1192_14_reg_1214_pp0_iter1_reg;
                trunc_ln1192_1_reg_1299 <= trunc_ln1192_1_fu_425_p1;
                trunc_ln1192_2_reg_1304 <= trunc_ln1192_2_fu_429_p1;
                trunc_ln1192_3_reg_1204_pp0_iter2_reg <= trunc_ln1192_3_reg_1204_pp0_iter1_reg;
                trunc_ln1192_5_reg_1324 <= trunc_ln1192_5_fu_458_p1;
                trunc_ln1192_6_reg_1329 <= trunc_ln1192_6_fu_462_p1;
                trunc_ln1192_7_reg_1334 <= trunc_ln1192_7_fu_466_p1;
                trunc_ln1192_8_reg_1209_pp0_iter2_reg <= trunc_ln1192_8_reg_1209_pp0_iter1_reg;
                trunc_ln1192_reg_1294 <= trunc_ln1192_fu_421_p1;
                trunc_ln415_3_reg_1391 <= add_ln1192_3_fu_551_p2(14 downto 8);
                trunc_ln415_4_reg_1424 <= add_ln1192_9_fu_647_p2(14 downto 8);
                trunc_ln415_5_reg_1457 <= add_ln1192_15_fu_743_p2(14 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                bias_0_read_reg_1119 <= bias_0;
                bias_0_read_reg_1119_pp0_iter1_reg <= bias_0_read_reg_1119;
                bias_1_read_reg_1114 <= bias_1;
                bias_1_read_reg_1114_pp0_iter1_reg <= bias_1_read_reg_1114;
                bias_2_read_reg_1109 <= bias_2;
                bias_2_read_reg_1109_pp0_iter1_reg <= bias_2_read_reg_1109;
                c1_0_read_reg_1164 <= c1_0;
                c1_1_read_reg_1159 <= c1_1;
                c1_2_read_reg_1154 <= c1_2;
                c1_2_read_reg_1154_pp0_iter1_reg <= c1_2_read_reg_1154;
                c2_0_read_reg_1149 <= c2_0;
                c2_1_read_reg_1144 <= c2_1;
                c2_2_read_reg_1139 <= c2_2;
                c2_2_read_reg_1139_pp0_iter1_reg <= c2_2_read_reg_1139;
                c3_0_read_reg_1134 <= c3_0;
                c3_1_read_reg_1129 <= c3_1;
                c3_2_read_reg_1124 <= c3_2;
                c3_2_read_reg_1124_pp0_iter1_reg <= c3_2_read_reg_1124;
                r_V_10_reg_1269 <= r_V_10_fu_383_p2;
                r_V_4_reg_1229 <= r_V_4_fu_331_p2;
                r_V_6_reg_1239 <= r_V_6_fu_344_p2;
                r_V_7_reg_1249 <= r_V_7_fu_357_p2;
                r_V_9_reg_1259 <= r_V_9_fu_370_p2;
                r_V_reg_1219 <= r_V_fu_315_p2;
                tmp_i1_keep_reg_1169 <= stream_in_24_TKEEP_int_regslice;
                tmp_i1_keep_reg_1169_pp0_iter1_reg <= tmp_i1_keep_reg_1169;
                tmp_i1_last_reg_1184 <= stream_in_24_TLAST_int_regslice;
                tmp_i1_last_reg_1184_pp0_iter1_reg <= tmp_i1_last_reg_1184;
                tmp_i1_strb_reg_1174 <= stream_in_24_TSTRB_int_regslice;
                tmp_i1_strb_reg_1174_pp0_iter1_reg <= tmp_i1_strb_reg_1174;
                tmp_i1_user_reg_1179 <= stream_in_24_TUSER_int_regslice;
                tmp_i1_user_reg_1179_pp0_iter1_reg <= tmp_i1_user_reg_1179;
                trunc_ln1115_1_reg_1234 <= trunc_ln1115_1_fu_337_p1;
                trunc_ln1115_2_reg_1244 <= trunc_ln1115_2_fu_350_p1;
                trunc_ln1115_3_reg_1254 <= trunc_ln1115_3_fu_363_p1;
                trunc_ln1115_4_reg_1264 <= trunc_ln1115_4_fu_376_p1;
                trunc_ln1115_5_reg_1274 <= trunc_ln1115_5_fu_389_p1;
                trunc_ln1115_reg_1224 <= trunc_ln1115_fu_321_p1;
                trunc_ln1192_14_reg_1214 <= trunc_ln1192_14_fu_305_p1;
                trunc_ln1192_14_reg_1214_pp0_iter1_reg <= trunc_ln1192_14_reg_1214;
                trunc_ln1192_3_reg_1204 <= trunc_ln1192_3_fu_297_p1;
                trunc_ln1192_3_reg_1204_pp0_iter1_reg <= trunc_ln1192_3_reg_1204;
                trunc_ln1192_8_reg_1209 <= trunc_ln1192_8_fu_301_p1;
                trunc_ln1192_8_reg_1209_pp0_iter1_reg <= trunc_ln1192_8_reg_1209;
                v_p1_V_reg_1189 <= v_p1_V_fu_273_p1;
                v_p2_V_reg_1194 <= stream_in_24_TDATA_int_regslice(15 downto 8);
                v_p3_V_reg_1199 <= stream_in_24_TDATA_int_regslice(23 downto 16);
                v_p3_V_reg_1199_pp0_iter1_reg <= v_p3_V_reg_1199;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Range1_all_ones_1_fu_933_p2 <= "1" when (tmp_reg_1429 = ap_const_lv4_F) else "0";
    Range1_all_ones_2_fu_1034_p2 <= "1" when (tmp_2_reg_1462 = ap_const_lv4_F) else "0";
    Range1_all_ones_fu_832_p2 <= "1" when (tmp_1_reg_1396 = ap_const_lv4_F) else "0";
    Range1_all_zeros_1_fu_938_p2 <= "1" when (tmp_reg_1429 = ap_const_lv4_0) else "0";
    Range1_all_zeros_2_fu_1039_p2 <= "1" when (tmp_2_reg_1462 = ap_const_lv4_0) else "0";
    Range1_all_zeros_fu_837_p2 <= "1" when (tmp_1_reg_1396 = ap_const_lv4_0) else "0";
    add_ln1192_10_fu_439_p2 <= std_logic_vector(unsigned(trunc_ln1115_3_reg_1254) + unsigned(trunc_ln1115_2_reg_1244));
    add_ln1192_12_fu_722_p2 <= std_logic_vector(unsigned(add_ln1192_17_reg_1339) + unsigned(trunc_ln1192_12_reg_1364));
    add_ln1192_14_fu_739_p2 <= std_logic_vector(unsigned(trunc_ln1192_11_reg_1359) + unsigned(trunc_ln1192_10_reg_1354));
    add_ln1192_15_fu_743_p2 <= std_logic_vector(unsigned(trunc_ln1192_s_fu_726_p3) + unsigned(add_ln1192_12_fu_722_p2));
    add_ln1192_17_fu_476_p2 <= std_logic_vector(unsigned(trunc_ln1115_5_reg_1274) + unsigned(trunc_ln1115_4_reg_1264));
    add_ln1192_1_fu_399_p2 <= std_logic_vector(unsigned(trunc_ln1115_1_reg_1234) + unsigned(trunc_ln1115_reg_1224));
    add_ln1192_2_fu_547_p2 <= std_logic_vector(unsigned(trunc_ln1192_1_reg_1299) + unsigned(trunc_ln1192_reg_1294));
    add_ln1192_3_fu_551_p2 <= std_logic_vector(unsigned(trunc_ln1192_4_fu_534_p3) + unsigned(add_ln1192_fu_530_p2));
    add_ln1192_6_fu_626_p2 <= std_logic_vector(unsigned(add_ln1192_10_reg_1309) + unsigned(trunc_ln1192_7_reg_1334));
    add_ln1192_8_fu_643_p2 <= std_logic_vector(unsigned(trunc_ln1192_6_reg_1329) + unsigned(trunc_ln1192_5_reg_1324));
    add_ln1192_9_fu_647_p2 <= std_logic_vector(unsigned(trunc_ln1192_9_fu_630_p3) + unsigned(add_ln1192_6_fu_626_p2));
    add_ln1192_fu_530_p2 <= std_logic_vector(unsigned(add_ln1192_1_reg_1279) + unsigned(trunc_ln1192_2_reg_1304));
    add_ln416_1_fu_914_p2 <= std_logic_vector(unsigned(zext_ln415_3_fu_906_p1) + unsigned(trunc_ln415_4_reg_1424));
    add_ln416_2_fu_1015_p2 <= std_logic_vector(unsigned(zext_ln415_5_fu_1007_p1) + unsigned(trunc_ln415_5_reg_1457));
    add_ln416_fu_813_p2 <= std_logic_vector(unsigned(zext_ln415_1_fu_805_p1) + unsigned(trunc_ln415_3_reg_1391));
    and_ln781_1_fu_964_p2 <= (p_Result_3_reg_1412 and and_ln781_4_fu_958_p2);
    and_ln781_2_fu_1065_p2 <= (p_Result_5_reg_1445 and and_ln781_5_fu_1059_p2);
    and_ln781_3_fu_857_p2 <= (carry_1_fu_826_p2 and Range1_all_ones_fu_832_p2);
    and_ln781_4_fu_958_p2 <= (carry_3_fu_927_p2 and Range1_all_ones_1_fu_933_p2);
    and_ln781_5_fu_1059_p2 <= (carry_5_fu_1028_p2 and Range1_all_ones_2_fu_1034_p2);
    and_ln781_fu_863_p2 <= (p_Result_1_reg_1379 and and_ln781_3_fu_857_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, regslice_both_stream_out_24_V_data_V_U_apdone_blk, stream_in_24_TVALID_int_regslice, stream_out_24_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((stream_out_24_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((stream_in_24_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((stream_out_24_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_stream_out_24_V_data_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, regslice_both_stream_out_24_V_data_V_U_apdone_blk, stream_in_24_TVALID_int_regslice, stream_out_24_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((stream_out_24_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((stream_in_24_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((stream_out_24_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_stream_out_24_V_data_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, regslice_both_stream_out_24_V_data_V_U_apdone_blk, stream_in_24_TVALID_int_regslice, stream_out_24_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((stream_out_24_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((stream_in_24_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((stream_out_24_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_stream_out_24_V_data_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(stream_in_24_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (stream_in_24_TVALID_int_regslice = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter4_assign_proc : process(stream_out_24_TREADY_int_regslice)
    begin
                ap_block_state5_pp0_stage0_iter4 <= (stream_out_24_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state6_pp0_stage0_iter5_assign_proc : process(regslice_both_stream_out_24_V_data_V_U_apdone_blk, stream_out_24_TREADY_int_regslice)
    begin
                ap_block_state6_pp0_stage0_iter5 <= ((stream_out_24_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_stream_out_24_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    carry_1_fu_826_p2 <= (tmp_6_fu_818_p3 xor ap_const_lv1_1);
    carry_3_fu_927_p2 <= (tmp_10_fu_919_p3 xor ap_const_lv1_1);
    carry_5_fu_1028_p2 <= (tmp_14_fu_1020_p3 xor ap_const_lv1_1);
    deleted_zeros_1_fu_951_p3 <= 
        select_ln778_1_fu_943_p3 when (p_Result_3_reg_1412(0) = '1') else 
        Range1_all_zeros_1_fu_938_p2;
    deleted_zeros_2_fu_1052_p3 <= 
        select_ln778_2_fu_1044_p3 when (p_Result_5_reg_1445(0) = '1') else 
        Range1_all_zeros_2_fu_1039_p2;
    deleted_zeros_fu_850_p3 <= 
        select_ln778_fu_842_p3 when (p_Result_1_reg_1379(0) = '1') else 
        Range1_all_zeros_fu_837_p2;
    out1_V_fu_888_p3 <= 
        zext_ln394_fu_876_p1 when (p_Result_s_fu_795_p3(0) = '1') else 
        select_ln394_fu_880_p3;
    out2_V_fu_989_p3 <= 
        zext_ln394_1_fu_977_p1 when (p_Result_2_fu_896_p3(0) = '1') else 
        select_ln394_1_fu_981_p3;
    out3_V_fu_1090_p3 <= 
        zext_ln394_2_fu_1078_p1 when (p_Result_4_fu_997_p3(0) = '1') else 
        select_ln394_2_fu_1082_p3;
    p_Result_2_fu_896_p3 <= ret_V_5_reg_1402(19 downto 19);
    p_Result_4_fu_997_p3 <= ret_V_8_reg_1435(19 downto 19);
    p_Result_s_fu_795_p3 <= ret_V_2_reg_1369(19 downto 19);
    p_Val2_3_fu_808_p2 <= std_logic_vector(unsigned(zext_ln415_fu_802_p1) + unsigned(p_Val2_2_reg_1374));
    p_Val2_6_fu_909_p2 <= std_logic_vector(unsigned(zext_ln415_2_fu_903_p1) + unsigned(p_Val2_5_reg_1407));
    p_Val2_9_fu_1010_p2 <= std_logic_vector(unsigned(zext_ln415_4_fu_1004_p1) + unsigned(p_Val2_8_reg_1440));
    r_V_10_fu_383_p1 <= zext_ln1118_1_fu_325_p1(8 - 1 downto 0);
    r_V_11_fu_489_p1 <= zext_ln1118_2_fu_409_p1(8 - 1 downto 0);
    r_V_4_fu_331_p1 <= zext_ln1118_1_fu_325_p1(8 - 1 downto 0);
    r_V_5_fu_415_p1 <= zext_ln1118_2_fu_409_p1(8 - 1 downto 0);
    r_V_6_fu_344_p1 <= zext_ln1118_fu_309_p1(8 - 1 downto 0);
    r_V_7_fu_357_p1 <= zext_ln1118_1_fu_325_p1(8 - 1 downto 0);
    r_V_8_fu_452_p1 <= zext_ln1118_2_fu_409_p1(8 - 1 downto 0);
    r_V_9_fu_370_p1 <= zext_ln1118_fu_309_p1(8 - 1 downto 0);
    r_V_fu_315_p1 <= zext_ln1118_fu_309_p1(8 - 1 downto 0);
    ret_V_1_fu_513_p2 <= std_logic_vector(signed(sext_ln703_2_fu_507_p1) + signed(sext_ln703_3_fu_510_p1));
    ret_V_2_fu_541_p2 <= std_logic_vector(signed(sext_ln1192_fu_526_p1) + signed(ret_V_1_fu_513_p2));
    ret_V_3_fu_443_p2 <= std_logic_vector(signed(sext_ln703_5_fu_436_p1) + signed(sext_ln703_4_fu_433_p1));
    ret_V_4_fu_609_p2 <= std_logic_vector(signed(sext_ln703_6_fu_603_p1) + signed(sext_ln703_7_fu_606_p1));
    ret_V_5_fu_637_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_622_p1) + signed(ret_V_4_fu_609_p2));
    ret_V_6_fu_480_p2 <= std_logic_vector(signed(sext_ln703_9_fu_473_p1) + signed(sext_ln703_8_fu_470_p1));
    ret_V_7_fu_705_p2 <= std_logic_vector(signed(sext_ln703_10_fu_699_p1) + signed(sext_ln703_11_fu_702_p1));
    ret_V_8_fu_733_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_718_p1) + signed(ret_V_7_fu_705_p2));
    ret_V_fu_403_p2 <= std_logic_vector(signed(sext_ln703_1_fu_396_p1) + signed(sext_ln703_fu_393_p1));
    rhs_2_fu_519_p3 <= (bias_0_read_reg_1119_pp0_iter2_reg & ap_const_lv8_0);
    rhs_5_fu_615_p3 <= (bias_1_read_reg_1114_pp0_iter2_reg & ap_const_lv8_0);
    rhs_8_fu_711_p3 <= (bias_2_read_reg_1109_pp0_iter2_reg & ap_const_lv8_0);
    select_ln394_1_fu_981_p3 <= 
        p_Val2_6_fu_909_p2 when (deleted_zeros_1_fu_951_p3(0) = '1') else 
        ap_const_lv8_FF;
    select_ln394_2_fu_1082_p3 <= 
        p_Val2_9_fu_1010_p2 when (deleted_zeros_2_fu_1052_p3(0) = '1') else 
        ap_const_lv8_FF;
    select_ln394_fu_880_p3 <= 
        p_Val2_3_fu_808_p2 when (deleted_zeros_fu_850_p3(0) = '1') else 
        ap_const_lv8_FF;
    select_ln396_1_fu_969_p3 <= 
        add_ln416_1_fu_914_p2 when (and_ln781_1_fu_964_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln396_2_fu_1070_p3 <= 
        add_ln416_2_fu_1015_p2 when (and_ln781_2_fu_1065_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln396_fu_868_p3 <= 
        add_ln416_fu_813_p2 when (and_ln781_fu_863_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln778_1_fu_943_p3 <= 
        Range1_all_zeros_1_fu_938_p2 when (tmp_10_fu_919_p3(0) = '1') else 
        Range1_all_ones_1_fu_933_p2;
    select_ln778_2_fu_1044_p3 <= 
        Range1_all_zeros_2_fu_1039_p2 when (tmp_14_fu_1020_p3(0) = '1') else 
        Range1_all_ones_2_fu_1034_p2;
    select_ln778_fu_842_p3 <= 
        Range1_all_zeros_fu_837_p2 when (tmp_6_fu_818_p3(0) = '1') else 
        Range1_all_ones_fu_832_p2;
        sext_ln1192_1_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_5_fu_615_p3),20));

        sext_ln1192_2_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_8_fu_711_p3),20));

        sext_ln1192_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_2_fu_519_p3),20));

        sext_ln703_10_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_6_reg_1344),20));

        sext_ln703_11_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_11_reg_1349),20));

        sext_ln703_1_fu_396_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_4_reg_1229),19));

        sext_ln703_2_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_1284),20));

        sext_ln703_3_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_5_reg_1289),20));

        sext_ln703_4_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_6_reg_1239),19));

        sext_ln703_5_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_reg_1249),19));

        sext_ln703_6_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_3_reg_1314),20));

        sext_ln703_7_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_reg_1319),20));

        sext_ln703_8_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_reg_1259),19));

        sext_ln703_9_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_reg_1269),19));

        sext_ln703_fu_393_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_reg_1219),19));


    stream_in_24_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, stream_in_24_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_24_TDATA_blk_n <= stream_in_24_TVALID_int_regslice;
        else 
            stream_in_24_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_24_TREADY <= regslice_both_stream_in_24_V_data_V_U_ack_in;

    stream_in_24_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_24_TREADY_int_regslice <= ap_const_logic_1;
        else 
            stream_in_24_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_24_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, stream_out_24_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            stream_out_24_TDATA_blk_n <= stream_out_24_TREADY_int_regslice;
        else 
            stream_out_24_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_24_TDATA_int_regslice <= ((out3_V_fu_1090_p3 & out2_V_fu_989_p3) & out1_V_fu_888_p3);
    stream_out_24_TVALID <= regslice_both_stream_out_24_V_data_V_U_vld_out;

    stream_out_24_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            stream_out_24_TVALID_int_regslice <= ap_const_logic_1;
        else 
            stream_out_24_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_919_p3 <= p_Val2_6_fu_909_p2(7 downto 7);
    tmp_14_fu_1020_p3 <= p_Val2_9_fu_1010_p2(7 downto 7);
    tmp_6_fu_818_p3 <= p_Val2_3_fu_808_p2(7 downto 7);
    trunc_ln1115_1_fu_337_p1 <= r_V_4_fu_331_p2(16 - 1 downto 0);
    trunc_ln1115_2_fu_350_p1 <= r_V_6_fu_344_p2(16 - 1 downto 0);
    trunc_ln1115_3_fu_363_p1 <= r_V_7_fu_357_p2(16 - 1 downto 0);
    trunc_ln1115_4_fu_376_p1 <= r_V_9_fu_370_p2(16 - 1 downto 0);
    trunc_ln1115_5_fu_389_p1 <= r_V_10_fu_383_p2(16 - 1 downto 0);
    trunc_ln1115_fu_321_p1 <= r_V_fu_315_p2(16 - 1 downto 0);
    trunc_ln1192_10_fu_495_p1 <= r_V_11_fu_489_p2(8 - 1 downto 0);
    trunc_ln1192_11_fu_499_p1 <= add_ln1192_17_fu_476_p2(8 - 1 downto 0);
    trunc_ln1192_12_fu_503_p1 <= r_V_11_fu_489_p2(16 - 1 downto 0);
    trunc_ln1192_14_fu_305_p1 <= bias_2(8 - 1 downto 0);
    trunc_ln1192_1_fu_425_p1 <= add_ln1192_1_fu_399_p2(8 - 1 downto 0);
    trunc_ln1192_2_fu_429_p1 <= r_V_5_fu_415_p2(16 - 1 downto 0);
    trunc_ln1192_3_fu_297_p1 <= bias_0(8 - 1 downto 0);
    trunc_ln1192_4_fu_534_p3 <= (trunc_ln1192_3_reg_1204_pp0_iter2_reg & ap_const_lv8_0);
    trunc_ln1192_5_fu_458_p1 <= r_V_8_fu_452_p2(8 - 1 downto 0);
    trunc_ln1192_6_fu_462_p1 <= add_ln1192_10_fu_439_p2(8 - 1 downto 0);
    trunc_ln1192_7_fu_466_p1 <= r_V_8_fu_452_p2(16 - 1 downto 0);
    trunc_ln1192_8_fu_301_p1 <= bias_1(8 - 1 downto 0);
    trunc_ln1192_9_fu_630_p3 <= (trunc_ln1192_8_reg_1209_pp0_iter2_reg & ap_const_lv8_0);
    trunc_ln1192_fu_421_p1 <= r_V_5_fu_415_p2(8 - 1 downto 0);
    trunc_ln1192_s_fu_726_p3 <= (trunc_ln1192_14_reg_1214_pp0_iter2_reg & ap_const_lv8_0);
    v_p1_V_fu_273_p1 <= stream_in_24_TDATA_int_regslice(8 - 1 downto 0);
    zext_ln1118_1_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_p2_V_reg_1194),18));
    zext_ln1118_2_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_p3_V_reg_1199_pp0_iter1_reg),18));
    zext_ln1118_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_p1_V_reg_1189),18));
    zext_ln394_1_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln396_1_fu_969_p3),8));
    zext_ln394_2_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln396_2_fu_1070_p3),8));
    zext_ln394_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln396_fu_868_p3),8));
    zext_ln415_1_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_1385),7));
    zext_ln415_2_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_1418),8));
    zext_ln415_3_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_1418),7));
    zext_ln415_4_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_1451),8));
    zext_ln415_5_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_1451),7));
    zext_ln415_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_1385),8));
end behav;
